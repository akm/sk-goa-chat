// Code generated by goa v3.14.1, DO NOT EDIT.
//
// users endpoints
//
// Command:
// $ goa gen apisvr/design -o ./services

package users

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "users" service endpoints.
type Endpoints struct {
	List   goa.Endpoint
	Create goa.Endpoint
}

// NewEndpoints wraps the methods of the "users" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		List:   NewListEndpoint(s),
		Create: NewCreateEndpoint(s),
	}
}

// Use applies the given middleware to all the "users" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.List = m(e.List)
	e.Create = m(e.Create)
}

// NewListEndpoint returns an endpoint function that calls the method "list" of
// service "users".
func NewListEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		res, err := s.List(ctx)
		if err != nil {
			return nil, err
		}
		vres := NewViewedUserList(res, "default")
		return vres, nil
	}
}

// NewCreateEndpoint returns an endpoint function that calls the method
// "create" of service "users".
func NewCreateEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UserCreatePayload)
		res, err := s.Create(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedUser(res, "default")
		return vres, nil
	}
}
