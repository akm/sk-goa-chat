// Code generated by goa v3.14.1, DO NOT EDIT.
//
// notifications gRPC client types
//
// Command:
// $ goa gen apisvr/design -o ./services

package client

import (
	notificationspb "apisvr/services/gen/grpc/notifications/pb"
	notifications "apisvr/services/gen/notifications"

	goa "goa.design/goa/v3/pkg"
)

// NewProtoSubscribeRequest builds the gRPC request type from the payload of
// the "subscribe" endpoint of the "notifications" service.
func NewProtoSubscribeRequest(payload *notifications.SubscribePayload) *notificationspb.SubscribeRequest {
	message := &notificationspb.SubscribeRequest{
		IdToken: payload.IDToken,
	}
	return message
}

func NewSubscribeResponseNotificationEvent(v *notificationspb.SubscribeResponse) *notifications.NotificationEvent {
	result := &notifications.NotificationEvent{}
	if v.ChannelIds != nil {
		result.ChannelIds = make([]uint64, len(v.ChannelIds))
		for i, val := range v.ChannelIds {
			result.ChannelIds[i] = val
		}
	}
	return result
}

// ValidateSubscribeResponse runs the validations defined on SubscribeResponse.
func ValidateSubscribeResponse(stream *notificationspb.SubscribeResponse) (err error) {
	if stream.ChannelIds == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("channel_ids", "stream"))
	}
	return
}
