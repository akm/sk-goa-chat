// Code generated by goa v3.14.1, DO NOT EDIT.
//
// users gRPC client types
//
// Command:
// $ goa gen apisvr/design -o ./services

package client

import (
	userspb "apisvr/services/gen/grpc/users/pb"
	users "apisvr/services/gen/users"
	usersviews "apisvr/services/gen/users/views"

	goa "goa.design/goa/v3/pkg"
)

// NewProtoListRequest builds the gRPC request type from the payload of the
// "list" endpoint of the "users" service.
func NewProtoListRequest() *userspb.ListRequest {
	message := &userspb.ListRequest{}
	return message
}

// NewListResult builds the result type of the "list" endpoint of the "users"
// service from the gRPC response type.
func NewListResult(message *userspb.ListResponse) *usersviews.UserListView {
	result := &usersviews.UserListView{
		Total:  &message.Total,
		Offset: &message.Offset,
	}
	if message.Items != nil {
		result.Items = make([]*usersviews.UserListItemView, len(message.Items.Field))
		for i, val := range message.Items.Field {
			result.Items[i] = &usersviews.UserListItemView{
				ID:   &val.Id,
				Name: &val.Name,
			}
		}
	}
	return result
}

// NewProtoCreateRequest builds the gRPC request type from the payload of the
// "create" endpoint of the "users" service.
func NewProtoCreateRequest(payload *users.UserCreatePayload) *userspb.CreateRequest {
	message := &userspb.CreateRequest{
		Name:  payload.Name,
		Email: payload.Email,
	}
	return message
}

// NewCreateResult builds the result type of the "create" endpoint of the
// "users" service from the gRPC response type.
func NewCreateResult(message *userspb.CreateResponse) *usersviews.UserView {
	result := &usersviews.UserView{
		ID:        &message.Id,
		CreatedAt: &message.CreatedAt,
		UpdatedAt: &message.UpdatedAt,
		Name:      &message.Name,
	}
	return result
}

// ValidateListResponse runs the validations defined on ListResponse.
func ValidateListResponse(message *userspb.ListResponse) (err error) {
	if message.Items == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("items", "message"))
	}
	return
}

// ValidateCreateResponse runs the validations defined on CreateResponse.
func ValidateCreateResponse(message *userspb.CreateResponse) (err error) {
	err = goa.MergeErrors(err, goa.ValidateFormat("message.created_at", message.CreatedAt, goa.FormatDateTime))
	err = goa.MergeErrors(err, goa.ValidateFormat("message.updated_at", message.UpdatedAt, goa.FormatDateTime))
	return
}
