// Code generated by goa v3.14.1, DO NOT EDIT.
//
// users gRPC server encoders and decoders
//
// Command:
// $ goa gen apisvr/design -o ./services

package server

import (
	userspb "apisvr/services/gen/grpc/users/pb"
	users "apisvr/services/gen/users"
	usersviews "apisvr/services/gen/users/views"
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodeListResponse encodes responses from the "users" service "list"
// endpoint.
func EncodeListResponse(ctx context.Context, v any, hdr, trlr *metadata.MD) (any, error) {
	vres, ok := v.(*usersviews.UserList)
	if !ok {
		return nil, goagrpc.ErrInvalidType("users", "list", "*usersviews.UserList", v)
	}
	result := vres.Projected
	(*hdr).Append("goa-view", vres.View)
	resp := NewProtoListResponse(result)
	return resp, nil
}

// EncodeCreateResponse encodes responses from the "users" service "create"
// endpoint.
func EncodeCreateResponse(ctx context.Context, v any, hdr, trlr *metadata.MD) (any, error) {
	vres, ok := v.(*usersviews.User)
	if !ok {
		return nil, goagrpc.ErrInvalidType("users", "create", "*usersviews.User", v)
	}
	result := vres.Projected
	(*hdr).Append("goa-view", vres.View)
	resp := NewProtoCreateResponse(result)
	return resp, nil
}

// DecodeCreateRequest decodes requests sent to "users" service "create"
// endpoint.
func DecodeCreateRequest(ctx context.Context, v any, md metadata.MD) (any, error) {
	var (
		message *userspb.CreateRequest
		ok      bool
	)
	{
		if message, ok = v.(*userspb.CreateRequest); !ok {
			return nil, goagrpc.ErrInvalidType("users", "create", "*userspb.CreateRequest", v)
		}
	}
	var payload *users.UserCreatePayload
	{
		payload = NewCreatePayload(message)
	}
	return payload, nil
}
