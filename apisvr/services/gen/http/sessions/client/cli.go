// Code generated by goa v3.14.1, DO NOT EDIT.
//
// sessions HTTP client CLI support package
//
// Command:
// $ goa gen apisvr/design -o ./services

package client

import (
	sessions "apisvr/services/gen/sessions"
	"encoding/json"
	"fmt"
)

// BuildCreatePayload builds the payload for the sessions create endpoint from
// CLI flags.
func BuildCreatePayload(sessionsCreateBody string) (*sessions.CreatePayload, error) {
	var err error
	var body CreateRequestBody
	{
		err = json.Unmarshal([]byte(sessionsCreateBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"id_token\": \"Consectetur suscipit quia est necessitatibus eum quo.\"\n   }'")
		}
	}
	v := &sessions.CreatePayload{
		IDToken: body.IDToken,
	}

	return v, nil
}

// BuildDeletePayload builds the payload for the sessions delete endpoint from
// CLI flags.
func BuildDeletePayload(sessionsDeleteSessionID string) (*sessions.DeletePayload, error) {
	var sessionID string
	{
		sessionID = sessionsDeleteSessionID
	}
	v := &sessions.DeletePayload{}
	v.SessionID = sessionID

	return v, nil
}
