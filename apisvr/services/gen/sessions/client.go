// Code generated by goa v3.14.1, DO NOT EDIT.
//
// sessions client
//
// Command:
// $ goa gen apisvr/design -o ./services

package sessions

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "sessions" service client.
type Client struct {
	CreateEndpoint goa.Endpoint
	DeleteEndpoint goa.Endpoint
}

// NewClient initializes a "sessions" service client given the endpoints.
func NewClient(create, delete_ goa.Endpoint) *Client {
	return &Client{
		CreateEndpoint: create,
		DeleteEndpoint: delete_,
	}
}

// Create calls the "create" endpoint of the "sessions" service.
// Create may return the following errors:
//   - "invalid_payload" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) Create(ctx context.Context, p *CreatePayload) (res *CreateResult, err error) {
	var ires any
	ires, err = c.CreateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CreateResult), nil
}

// Delete calls the "delete" endpoint of the "sessions" service.
// Delete may return the following errors:
//   - "invalid_payload" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) Delete(ctx context.Context, p *DeletePayload) (res *DeleteResult, err error) {
	var ires any
	ires, err = c.DeleteEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*DeleteResult), nil
}
